#!/usr/local/bin/php-cgi -f
<?php
/*
 * rc.banner
 *
 * part of pfSense
 * Copyright (c) 2005 Colin Smith
 * Copyright (c) 2005-2016 Rubicon Communications, LLC (Netgate)
 * All rights reserved
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgment:
 *    "This product includes software developed by the pfSense Project
 *    for use in the pfSenseÂ® software distribution. (http://www.pfsense.org/).
 *
 * 4. The names "pfSense" and "pfSense Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    coreteam@pfsense.org.
 *
 * 5. Products derived from this software may not be called "pfSense"
 *    nor may "pfSense" appear in their names without prior written
 *    permission of the Electric Sheep Fencing, LLC.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *
 * "This product includes software developed by the pfSense Project
 * for use in the pfSense software distribution (http://www.pfsense.org/).
 *
 * THIS SOFTWARE IS PROVIDED BY THE pfSense PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE pfSense PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* parse the configuration and include all functions used below */
require_once("config.inc");
require_once("gwlb.inc");
require_once("interfaces.inc");

$hostname = $config['system']['hostname'];
$product = $g['product_name'];
$machine = trim(`uname -m`);
$hideplatform = $g['hideplatform'];

if (!$hideplatform) {
	if ($g['platform'] == $g['product_name']) {
		$platform = "full-install";
	} else {
		$platform = $g['platform'];
	}
	$platformbanner = " {$platform}";
}

print "*** Welcome to {$product} {$g['product_version_string']} ({$machine}{$platformbanner}) on {$hostname} ***\n";

$iflist = get_configured_interface_with_descr(false, true);
foreach ($iflist as $ifname => $friendly) {
	/* point to this interface's config */
	$ifconf = $config['interfaces'][$ifname];
	/* look for 'special cases' */
	switch ($ifconf['ipaddr']) {
		case "dhcp":
			$class = "/DHCP4";
			break;
		case "pppoe":
			$class = "/PPPoE";
			break;
		case "pptp":
			$class = "/PPTP";
			break;
		case "l2tp":
			$class = "/L2TP";
			break;
		default:
			$class = "";
			break;
	}
	switch ($ifconf['ipaddrv6']) {
		case "dhcp6":
			$class6 = "/DHCP6";
			break;
		case "slaac":
			$class6 = "/SLAAC";
			break;
		case "6rd":
			$class6 = "/6RD";
			break;
		case "6to4":
			$class6 = "/6to4";
			break;
		case "track6":
			$class6 = "/t6";
			break;
		default:
			$class6 = "";
			break;
	}
	$ipaddr = get_interface_ip($ifname);
	$subnet = get_interface_subnet($ifname);
	$ipaddr6 = get_interface_ipv6($ifname);
	$subnet6 = get_interface_subnetv6($ifname);
	$realif = get_real_interface($ifname);
	$tobanner = "{$friendly} ({$ifname})";

	printf("\n %-15s -> %-10s -> ",
		$tobanner,
		$realif
	);
	$v6first = false;
	if (!empty($ipaddr) && !empty($subnet)) {
		printf("v4%s: %s/%s",
			$class,
			$ipaddr,
			$subnet
		);
	} else {
		$v6first = true;
	}
	if (!empty($ipaddr6) && !empty($subnet6)) {
		if (!$v6first) {
			printf("\n%s", str_repeat(" ", 34));
		}
		printf("v6%s: %s/%s",
			$class6,
			$ipaddr6,
			$subnet6
		);
	}
}
printf("\n");
?>
